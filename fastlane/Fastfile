# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane         

load 'util/versions.rb'
load 'util/lanes.rb'

default_platform(:android)

platform :android do

  desc <<~DOC
    Publish a project to a maven repository.
    
    Parameters:
      repo_url      - the url of the maven repository
      repo_user     - the username to use for authentication
      repo_password - the password to use for authentication
      project_id    - the id of the project to be released (e.g., health-sdk, health-api-lib)"
      module_id     - the id of the project's module to be released (e.g., sdk, lib)"
      git_tag       - the git tag name used to release the project
      build_number  - the build number to use in the release"
  DOC
  lane :publish_to_maven_repo do |options|
    (repo_url, repo_user, repo_password, project_id, module_id, git_tag, build_number) = 
      check_and_get_options(options, [:repo_url, :repo_user, :repo_password, :project_id, :module_id, :git_tag, :build_number], UI)

    tag_version = get_project_version_from_tag(project_id, git_tag, UI)
    project_version = get_project_version_from_gradle(project_id, module_id)

    if tag_version != project_version
      UI.abort_with_message!  <<~MESSAGE
        Version in the tag is different from the project version:
          * tag       : #{tag_version}
          * project   : #{project_version}
        
        Change the version in the tag or update the project's version in "#{project_id}/#{module_id}/gradle.properties".
      MESSAGE
    end
    
    UI.message <<~MESSAGE
      Will release to a maven repository:
        * repository url  : #{repo_url}
        * gradle module   : #{project_id}:#{module_id}
        * version         : #{project_version}
        * build number    : #{build_number} 
    MESSAGE

    gradle(
      task: "#{project_id}:#{module_id}:publishReleasePublicationToReleasesRepository",
      properties: { 
        "versionCode" => build_number,
        "mavenReleasesRepoUrl" => repo_url,
        "repoUser" => repo_user,
        "repoPassword" => repo_password
      }
    )

    UI.success <<~MESSAGE
      Successfully released to a maven repository:
        * repository url  : #{repo_url}
        * gradle module   : #{project_id}:#{module_id}
        * version         : #{project_version}
        * build number    : #{build_number} 
    MESSAGE
  end

end

