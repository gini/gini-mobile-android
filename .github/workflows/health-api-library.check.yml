name: Check Health API Library

on:
  push:
    paths:
      - 'health-api-library/**'
      - 'core-api-library/**'
      - 'gradle/**'
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
    types: [opened, edited, reopened]
    paths:
      - 'health-api-library/**'
      - 'core-api-library/**'
      - 'gradle/**'
  workflow_call:
    secrets:
      GINI_MOBILE_TEST_CLIENT_SECRET:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run unit tests
        run: ./gradlew health-api-library:library:testDebugUnitTest

      - name: archive unit test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: health-api-library-unit-test-results
          path: health-api-library/library/build/reports/tests

#      should be investigated later, right now does not work with AGP 8
#      read this article for some help: https://about.codecov.io/blog/code-coverage-for-android-development-using-kotlin-jacoco-github-actions-and-codecov/
#
#      - name: create unit test coverage report
#        run: ./gradlew health-api-library:library:jacocoTestDebugUnitTestReport
#
#      - name: archive unit test coverage report
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: health-api-library-unit-test-coverage
#          path: health-api-library/library/build/jacoco/jacocoHtml

  instrumented-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [22, 31]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: enable KVM group perms for emulator
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: avd cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-x86_64-${{ matrix.api-level }}-${{ github.ref_name }}

      - name: create avd and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -no-audio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: run instrumented tests
        timeout-minutes: 20
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: >
            adb uninstall net.gini.android.health.api.test ;
            ./gradlew health-api-library:library:connectedCheck
            -PtestClientId="gini-mobile-test"
            -PtestClientSecret="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
            -PtestApiUri="https://health-api.gini.net"
            -PtestUserCenterUri="https://user.gini.net"

      - name: archive instrumented test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: health-api-library-instrumented-test-results
          path: health-api-library/library/build/outputs/androidTest-results/connected

  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run checkstyle
        run: ./gradlew health-api-library:library:checkstyle

      - name: archive checkstyle report
        uses: actions/upload-artifact@v3
        with:
          name: health-api-library-checkstyle-report
          path: health-api-library/library/build/reports/checkstyle/*.html

  pmd:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run pmd
        run: ./gradlew health-api-library:library:pmd

      - name: archive pmd report
        uses: actions/upload-artifact@v3
        with:
          name: health-api-library-pmd-report
          path: health-api-library/library/build/reports/pmd/*.html

  android-lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run android lint
        run: ./gradlew health-api-library:library:lint

      - name: archive android lint report
        uses: actions/upload-artifact@v3
        with:
          name: health-api-library-android-lint-report
          path: health-api-library/library/build/reports/lint-results*.html

  detekt:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run detekt
        run: ./gradlew health-api-library:library:detekt

      - name: archive detekt report
        uses: actions/upload-artifact@v3
        with:
          name: health-api-library-detekt-report
          path: health-api-library/library/build/reports/detekt/*.html

  ktlint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run ktlint
        run: ./gradlew health-api-library:library:ktlintCheck

      - name: archive ktlint report
        uses: actions/upload-artifact@v3
        with:
          name: health-api-library-ktlint-report
          path: health-api-library/library/build/reports/ktlint/**/*.html
          