name: Check Bank SDK

permissions:
  contents: read

on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'bank-sdk/**'
      - 'capture-sdk/**'
      - 'bank-api-library/**'
      - 'core-api-library/**'
      - 'gradle/**'
  workflow_call:
    secrets:
      GINI_MOBILE_TEST_CLIENT_SECRET:
        required: true
      BANK_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-check
  cancel-in-progress: ${{ !contains(github.ref, 'refs/tags/')}}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run unit tests
        run: ./gradlew bank-sdk:sdk:testDebugUnitTest

      - name: archive unit test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bank-sdk-unit-test-results
          path: bank-sdk/sdk/build/reports/tests

#      Disabled due to jacoco throwing an exception: "Unexpected SMAP line: *S KotlinDebug"
#      This workaround didn't help either: https://youtrack.jetbrains.com/issue/KT-44757#focus=Comments-27-5247441.0-0
#      - name: create unit test coverage report
#        run: ./gradlew bank-sdk:sdk:jacocoTestDebugUnitTestReport
#
#      - name: archive unit test coverage report
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: bank-sdk-unit-test-coverage
#          path: bank-sdk/sdk/build/jacoco/jacocoHtml

  instrumented-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: enable KVM group perms for emulator
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: avd cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-x86_64-33-${{ github.ref_name }}

      - name: create avd and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: 33
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -no-audio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: run instrumented tests
        timeout-minutes: 20
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: 33
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: >
            adb uninstall net.gini.android.bank.sdk.test ;
            ./gradlew bank-sdk:sdk:connectedCheck
            -PtestClientId="gini-mobile-test"
            -PtestClientSecret="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
            -PtestApiUri="https://pay-api.gini.net"
            -PtestUserCenterUri="https://user.gini.net"

      - name: archive instrumented test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bank-sdk-instrumented-test-results
          path: bank-sdk/sdk/build/outputs/androidTest-results/connected

      - name: run example app instrumented tests
        timeout-minutes: 20
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2.34.0
        with:
          api-level: 33
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: >
            adb uninstall net.gini.android.bank.sdk.exampleapp.test ;
            ./gradlew bank-sdk:example-app:connectedDevExampleAppDebugAndroidTest
            -PclientId="gini-mobile-test"
            -PclientSecret="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"

      - name: archive instrumented test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bank-sdk-example-app-instrumented-test-results
          path: bank-sdk/example-app/build/outputs/androidTest-results/connected

  build-example-apps:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: build release example app for QA
        run: >
          ./gradlew bank-sdk:example-app:assembleQaExampleAppRelease
          -PclientId="gini-mobile-test" 
          -PclientSecret="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
          -PreleaseKeystoreFile="screen_api_example.jks"
          -PreleaseKeystorePassword='${{ secrets.BANK_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'
          -PreleaseKeyAlias="screen_api_example"
          -PreleaseKeyPassword='${{ secrets.BANK_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'

      - name: archive release example app for QA
        uses: actions/upload-artifact@v4
        with:
          name: bank-sdk-example-app-qa-release
          path: bank-sdk/example-app/build/outputs/apk/qaExampleApp/release

      - name: build release example app for production
        run: >
          ./gradlew bank-sdk:example-app:assembleProdExampleAppRelease
          -PclientId="gini-mobile-test" 
          -PclientSecret="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
          -PreleaseKeystoreFile="screen_api_example.jks"
          -PreleaseKeystorePassword='${{ secrets.BANK_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'
          -PreleaseKeyAlias="screen_api_example"
          -PreleaseKeyPassword='${{ secrets.BANK_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'

      - name: archive release example app for production
        uses: actions/upload-artifact@v4
        with:
          name: bank-sdk-example-app-prod-release
          path: bank-sdk/example-app/build/outputs/apk/prodExampleApp/release

  android-lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run android lint
        run: ./gradlew bank-sdk:sdk:lint

      - name: archive android lint report
        uses: actions/upload-artifact@v4
        with:
          name: bank-sdk-android-lint-report
          path: bank-sdk/sdk/build/reports/lint-results*.html

  detekt:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run detekt
        run: ./gradlew bank-sdk:sdk:detekt

      - name: archive detekt report
        uses: actions/upload-artifact@v4
        with:
          name: bank-sdk-detekt-report
          path: bank-sdk/sdk/build/reports/detekt/*.html

  ktlint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: run ktlint
        run: ./gradlew bank-sdk:sdk:ktlintCheck

      - name: archive ktlint report
        uses: actions/upload-artifact@v4
        with:
          name: bank-sdk-ktlint-report
          path: bank-sdk/sdk/build/reports/ktlint/**/*.html
