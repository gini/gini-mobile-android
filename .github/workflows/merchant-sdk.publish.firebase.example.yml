name: Publish Merchant SDK Example App QA Build to Firebase App Distribution

on:
  workflow_dispatch:

jobs:
  publish_to_app_center:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.0'
          bundler-cache: true

      - name: build release example app for QA
        run: >
          ./gradlew merchant-sdk:example-app:assembleQaRelease
          -PclientId="gini-mobile-test" 
          -PclientSecret="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
          -PreleaseKeystoreFile="merchant_sdk_example.jks"
          -PreleaseKeystorePassword='${{ secrets.MERCHANT_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'
          -PreleaseKeyAlias="merchant_sdk_example"
          -PreleaseKeyPassword='${{ secrets.MERCHANT_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'

      - name: Check file existence
        uses: andstor/file-existence-action@v3
        with:
          files: "./merchant-sdk/example-app/build/outputs/apk/qa/release/example-app-qa-release.apk"
          fail: true

      - name: Install Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm install -g firebase-tools@13.17.0
        shell: bash

      - name: Publish to Firebase
        id: distribute
        run: |
              chmod +x .github/publish.sh
              .github/publish.sh
        shell: bash
        env:
          INPUT_APPID: ${{secrets.GINI_MERCHANT_SDK_EXAMPLE_APP_FIREBASE_ID}}
          INPUT_SERVICECREDENTIALSFILECONTENT: ${{ secrets.FIREBASE_CREDENTIAL_FILE_CONTENT }}
          INPUT_FILE: merchant-sdk/example-app/build/outputs/apk/qa/release/example-app-qa-release.apk
          INPUT_GROUPS: testers
          INPUT_RELEASENOTES: |
                      ${{ format('{{ {0} {1} }}', github.ref, github.sha) }}
                      ${{ github.event.head_commit.message }}

      - name: Extract Jira ticket
        id: extract_jira_ticket
        run: |
          commit_message=$(git log -1 --pretty=%B)
          jira_ticket=$(echo "$commit_message" | sed -n '2p')
          echo "JIRA_TICKET_NAME=${jira_ticket}" >> $GITHUB_ENV

      - name: Login to jira
        uses: justin-jhg/gajira-login@v1
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_KEY }}

      - name: Comment on issue
        uses: atlassian/gajira-comment@v3
        with:
          issue: ${{ env.JIRA_TICKET_NAME }}
          comment: Build link ${{ steps.distribute.outputs.FIREBASE_CONSOLE_URI }}"
