name: Publish Merchant SDK Example App QA Build to Firebase App Distribution

on:
  workflow_dispatch:
  push:
    paths:
      - 'merchant-sdk/**'
      - 'health-api-library/**'
      - 'core-api-library/**'
      - 'gradle/**'

jobs:
  publish_to_app_center:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.0'
          bundler-cache: true

      - name: build release example app for QA
        run: >
          ./gradlew merchant-sdk:example-app:assembleQaRelease
          -PclientId="gini-mobile-test" 
          -PclientSecret="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
          -PreleaseKeystoreFile="merchant_sdk_example.jks"
          -PreleaseKeystorePassword='${{ secrets.MERCHANT_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'
          -PreleaseKeyAlias="merchant_sdk_example"
          -PreleaseKeyPassword='${{ secrets.MERCHANT_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'

      - name: Check file existence
        uses: andstor/file-existence-action@v3
        with:
          files: "./merchant-sdk/example-app/build/outputs/apk/qa/release/example-app-qa-release.apk"
          fail: true

      - name: Distribute Merchant sdk example apk to Firebase App Distribution
        id: distr
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{secrets.GINI_MERCHANT_SDK_EXAMPLE_APP_FIREBASE_ID}}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: merchant-sdk/example-app/build/outputs/apk/qa/release/example-app-qa-release.apk
          releaseNotes: |
            ${{ format('{{ {0} {1} }}', github.ref, github.sha) }}
            ${{ github.event.head_commit.message }}

      - name: Display Firebase Console URI
        run: |
            echo "Firebase Console URI: ${{ steps.distr.outputs.FIREBASE_CONSOLE_URI }}"

      - name: Display Testing URI
        run: |
            echo "Testing URI ${{ steps.distr.outputs.TESTING_URI }}"

      - name: Display Binary Download URI
        run: |
             echo "Binary Download URI: ${{ steps.distr }}"

      - name: Display Outputs
        run: |
           echo "Binary Download URI: ${{ toJSON(steps.distr.outputs) }}"
          
          
      - name: Login
        uses: justin-jhg/gajira-login@v1
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_KEY }}