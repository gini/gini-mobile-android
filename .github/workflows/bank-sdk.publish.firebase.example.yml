name: Publish Bank SDK Example App QA Build to Firebase distribution

on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, reopened, synchronize]
    paths:
      - 'bank-sdk/**'
      - 'capture-sdk/**'
      - 'bank-api-library/**'
      - 'core-api-library/**'
      - 'gradle/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-publish
  cancel-in-progress: ${{ !contains(github.ref, 'refs/tags/')}}

jobs:
  check:
    uses: ./.github/workflows/bank-sdk.check.yml
    secrets:
      GINI_MOBILE_TEST_CLIENT_SECRET: ${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}
      BANK_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD: ${{ secrets.BANK_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}
        
  publish_to_firebase_distribution:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.0'
          bundler-cache: true

      - name: build release example app for QA
        run: >
          ./gradlew bank-sdk:example-app:assembleQaExampleAppRelease
          -PclientId="gini-mobile-test" 
          -PclientSecret="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
          -PreleaseKeystoreFile="screen_api_example.jks"
          -PreleaseKeystorePassword='${{ secrets.BANK_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'
          -PreleaseKeyAlias="screen_api_example"
          -PreleaseKeyPassword='${{ secrets.BANK_SDK_EXAMPLE_APP_KEYSTORE_PASSWORD }}'      

      - name: Check file existence
        uses: andstor/file-existence-action@v3
        with:
          files: "./bank-sdk/example-app/build/outputs/apk/qaExampleApp/release/example-app-qa-exampleApp-release.apk"
          fail: true

      - name: Install Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm install -g firebase-tools@13.17.0
        shell: bash

      - name: Distribute bank-sdk example apk to Firebase App Distribution
        id: distribute
        run: |
          chmod +x .github/publish_to_firebase.sh
          .github/publish_to_firebase.sh
        shell: bash
        env:
          INPUT_APPID: ${{secrets.GINI_BANK_SDK_EXAMPLE_APP_FIREBASE_ID}}
          INPUT_SERVICECREDENTIALSFILECONTENT: ${{ secrets.FIREBASE_CREDENTIAL_FILE_CONTENT }}
          INPUT_FILE: bank-sdk/example-app/build/outputs/apk/qaExampleApp/release/example-app-qa-exampleApp-release.apk
          INPUT_GROUPS: testers
          INPUT_RELEASENOTES: |
            ${{ format('{{ {0} {1} }}', github.ref, github.sha) }}
            ${{ github.event.head_commit.message }}

      - name: Extract Jira ticket
        id: extract_jira_ticket
        run: |
          commit_message=$(git log -1 --pretty=%B)
          jira_ticket=$(echo "$commit_message" | awk 'NR > 1 && $0 != "" { print $0; exit }')
          echo "JIRA_TICKET_NAME=${jira_ticket}" >> $GITHUB_ENV
          commit_message=$(git log -1 --pretty=%B)

      - name: Debug Jira Ticket
        run: echo "JIRA_TICKET_NAME is ${{ env.JIRA_TICKET_NAME }}"

      - name: Login to jira
        if: ${{ env.JIRA_TICKET_NAME != null }}
        uses: justin-jhg/gajira-login@v1
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_KEY }}

      - name: Comment on issue
        if: ${{ env.JIRA_TICKET_NAME != null }}
        uses: atlassian/gajira-comment@v3
        with:
          issue: ${{ env.JIRA_TICKET_NAME }}
          comment: Build bank example app ${{ steps.distribute.outputs.FIREBASE_CONSOLE_URI }} and app tester build can be downloaded from this link ${{ steps.distribute.outputs.TESTING_URI }}